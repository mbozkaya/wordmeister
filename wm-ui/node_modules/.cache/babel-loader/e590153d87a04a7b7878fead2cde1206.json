{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repository\\\\wordmeister\\\\wm-ui\\\\src\\\\views\\\\auth\\\\LoginView.js\";\nimport React from 'react';\nimport { Link as RouterLink, Navigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Container, Grid, Link, TextField, Typography, makeStyles } from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\nimport { AuthContext } from 'src/contexts/authContext';\nimport { Alert } from '@material-ui/lab';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, ({\n    onLogin,\n    authorize,\n    loginError,\n    loginErrorMessage\n  }) => authorize ? /*#__PURE__*/React.createElement(Navigate, {\n    to: \"/app/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: 'demo@devias.io',\n      password: 'Password123'\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      password: Yup.string().max(255).required('Password is required')\n    }),\n    onSubmit: val => {\n      onLogin(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    touched,\n    values\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Sign in on the internal platform\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    startIcon: /*#__PURE__*/React.createElement(FacebookIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 40\n      }\n    }),\n    onClick: handleSubmit,\n    size: \"large\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 27\n    }\n  }, \"Login with Facebook\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    startIcon: /*#__PURE__*/React.createElement(GoogleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 40\n      }\n    }),\n    onClick: handleSubmit,\n    size: \"large\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 27\n    }\n  }, \"Login with Google\"))), /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    mb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, \"or login with email address\")), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.email && errors.email),\n    fullWidth: true,\n    helperText: touched.email && errors.email,\n    label: \"Email Address\",\n    margin: \"normal\",\n    name: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"email\",\n    value: values.email,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.password && errors.password),\n    fullWidth: true,\n    helperText: touched.password && errors.password,\n    label: \"Password\",\n    margin: \"normal\",\n    name: \"password\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"password\",\n    value: values.password,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 23\n    }\n  }), loginError && /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    mb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 27\n    }\n  }, loginErrorMessage)), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, \"Sign in now\")), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }, \"Don't have an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    component: RouterLink,\n    to: \"/register\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, \"Sign up\"))))))));\n};\n\nexport default LoginView;","map":{"version":3,"sources":["C:/Repository/wordmeister/wm-ui/src/views/auth/LoginView.js"],"names":["React","Link","RouterLink","Navigate","Yup","Formik","Box","Button","Container","Grid","TextField","Typography","makeStyles","FacebookIcon","GoogleIcon","Page","AuthContext","Alert","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","LoginView","classes","onLogin","authorize","loginError","loginErrorMessage","email","password","object","shape","string","max","required","val","errors","handleBlur","handleChange","handleSubmit","touched","values","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink, Navigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport Page from 'src/components/Page';\nimport { AuthContext } from 'src/contexts/authContext';\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n\n  return (\n    <AuthContext.Consumer>\n      {\n        ({\n          onLogin, authorize, loginError, loginErrorMessage\n        }) => (authorize ? <Navigate to=\"/app/dashboard\" /> : (\n          <Page\n            className={classes.root}\n            title=\"Login\"\n          >\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              height=\"100%\"\n              justifyContent=\"center\"\n            >\n              <Container maxWidth=\"sm\">\n                <Formik\n                  initialValues={{\n                    email: 'demo@devias.io',\n                    password: 'Password123'\n                  }}\n                  validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                  })}\n                  onSubmit={(val) => {\n                    onLogin(val);\n                  }}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    touched,\n                    values\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                      <Box mb={3}>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"h2\"\n                        >\n                          Sign in\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          gutterBottom\n                          variant=\"body2\"\n                        >\n                          Sign in on the internal platform\n                        </Typography>\n                      </Box>\n                      <Grid\n                        container\n                        spacing={3}\n                      >\n                        <Grid\n                          item\n                          xs={12}\n                          md={6}\n                        >\n                          <Button\n                            color=\"primary\"\n                            fullWidth\n                            startIcon={<FacebookIcon />}\n                            onClick={handleSubmit}\n                            size=\"large\"\n                            variant=\"contained\"\n                          >\n                            Login with Facebook\n                          </Button>\n                        </Grid>\n                        <Grid\n                          item\n                          xs={12}\n                          md={6}\n                        >\n                          <Button\n                            fullWidth\n                            startIcon={<GoogleIcon />}\n                            onClick={handleSubmit}\n                            size=\"large\"\n                            variant=\"contained\"\n                          >\n                            Login with Google\n                          </Button>\n                        </Grid>\n                      </Grid>\n                      <Box\n                        mt={3}\n                        mb={1}\n                      >\n                        <Typography\n                          align=\"center\"\n                          color=\"textSecondary\"\n                          variant=\"body1\"\n                        >\n                          or login with email address\n                        </Typography>\n                      </Box>\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email}\n                        label=\"Email Address\"\n                        margin=\"normal\"\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"email\"\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(touched.password && errors.password)}\n                        fullWidth\n                        helperText={touched.password && errors.password}\n                        label=\"Password\"\n                        margin=\"normal\"\n                        name=\"password\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.password}\n                        variant=\"outlined\"\n                      />\n                      {loginError && (\n                        <Box\n                          mt={3}\n                          mb={1}\n                        >\n                          <Alert variant=\"filled\" severity=\"error\">\n                            {loginErrorMessage}\n                          </Alert>\n                          {/* <Typography\n                          align=\"center\"\n                          color=\"textSecondary\"\n                          variant=\"body1\"\n                        >\n                          or login with email address\n                        </Typography> */}\n                        </Box>\n                      )}\n                      <Box my={2}>\n                        <Button\n                          color=\"primary\"\n                          fullWidth\n                          size=\"large\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          Sign in now\n                        </Button>\n                      </Box>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body1\"\n                      >\n                        Don&apos;t have an account?\n                        {' '}\n                        <Link\n                          component={RouterLink}\n                          to=\"/register\"\n                          variant=\"h6\"\n                        >\n                          Sign up\n                        </Link>\n                      </Typography>\n                    </form>\n                  )}\n                </Formik>\n              </Container>\n            </Box>\n          </Page>\n        ))\n      }\n    </AuthContext.Consumer>\n  );\n};\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}