{"ast":null,"code":"import { Fetch } from \"../components/loading/fetch\";\nimport urlConfig from '../configs/urlConfig';\nimport utilitity from \"../configs/utilitiy\";\nexport default {\n  login: model => {\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(model)\n    };\n    return Fetch(urlConfig.account.login, requestOptions);\n  },\n  signup: model => {\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(model)\n    };\n    return Fetch(urlConfig.account.signup, requestOptions);\n  },\n  authenticated: () => {\n    var requestOptions = {\n      method: 'GET',\n      headers: utilitity.authorizedHeader()\n    };\n    return fetch(urlConfig.account.authenticated, requestOptions).then(response => {\n      if (response.ok) {\n        return true;\n      }\n\n      if (response.status === 401) {\n        localStorage.removeItem('user');\n      } else {\n        throw new Error();\n      }\n\n      return false;\n    }).then(json => {\n      return json;\n    }).catch(ex => {\n      console.error(ex);\n      return false;\n    });\n  }\n};","map":{"version":3,"sources":["C:/Repository/wordmeister/wm-ui/src/services/accountService.js"],"names":["Fetch","urlConfig","utilitity","login","model","requestOptions","method","headers","body","JSON","stringify","account","signup","authenticated","authorizedHeader","fetch","then","response","ok","status","localStorage","removeItem","Error","json","catch","ex","console","error"],"mappings":"AAAA,SAASA,KAAT,QAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,eAAe;AACXC,EAAAA,KAAK,EAAEC,KAAK,IAAI;AACZ,QAAIC,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFQ;AAKjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf;AALW,KAArB;AAQA,WAAOJ,KAAK,CAACC,SAAS,CAACU,OAAV,CAAkBR,KAAnB,EAA0BE,cAA1B,CAAZ;AAEH,GAZU;AAaXO,EAAAA,MAAM,EAAER,KAAK,IAAI;AACb,QAAIC,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFQ;AAKjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf;AALW,KAArB;AAQA,WAAOJ,KAAK,CAACC,SAAS,CAACU,OAAV,CAAkBC,MAAnB,EAA2BP,cAA3B,CAAZ;AACH,GAvBU;AAwBXQ,EAAAA,aAAa,EAAE,MAAM;AACjB,QAAIR,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBC,MAAAA,OAAO,EAAEL,SAAS,CAACY,gBAAV;AAFQ,KAArB;AAKA,WAAOC,KAAK,CAACd,SAAS,CAACU,OAAV,CAAkBE,aAAnB,EAAkCR,cAAlC,CAAL,CACFW,IADE,CACGC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAO,IAAP;AACH;;AACD,UAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,QAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACH,OAFD,MAEO;AACH,cAAM,IAAIC,KAAJ,EAAN;AACH;;AACD,aAAO,KAAP;AACH,KAXE,EAYFN,IAZE,CAYGO,IAAI,IAAI;AACV,aAAOA,IAAP;AACH,KAdE,EAeFC,KAfE,CAeIC,EAAE,IAAI;AACTC,MAAAA,OAAO,CAACC,KAAR,CAAcF,EAAd;AACA,aAAO,KAAP;AACH,KAlBE,CAAP;AAmBH;AAjDU,CAAf","sourcesContent":["import { Fetch } from \"../components/loading/fetch\";\r\nimport urlConfig from '../configs/urlConfig';\r\nimport utilitity from \"../configs/utilitiy\";\r\nexport default {\r\n    login: model => {\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(model),\r\n        };\r\n\r\n        return Fetch(urlConfig.account.login, requestOptions);\r\n\r\n    },\r\n    signup: model => {\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(model)\r\n        };\r\n\r\n        return Fetch(urlConfig.account.signup, requestOptions);\r\n    },\r\n    authenticated: () => {\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: utilitity.authorizedHeader(),\r\n        };\r\n\r\n        return fetch(urlConfig.account.authenticated, requestOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return true;\r\n                }\r\n                if (response.status === 401) {\r\n                    localStorage.removeItem('user');\r\n                } else {\r\n                    throw new Error();\r\n                }\r\n                return false;\r\n            })\r\n            .then(json => {\r\n                return json;\r\n            })\r\n            .catch(ex => {\r\n                console.error(ex);\r\n                return false;\r\n            });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}