{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repository\\\\wordmeister\\\\wm-ui\\\\src\\\\layouts\\\\DashboardLayout\\\\TopBar.js\";\nimport logo from 'src/components/Logo';\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { AppBar, Badge, Box, Hidden, IconButton, Toolbar, makeStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport { AuthContext } from '../../contexts/authContext';\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  return /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, ({\n    authorize,\n    onLogin,\n    onLogout\n  }) => /*#__PURE__*/React.createElement(AppBar, Object.assign({\n    className: clsx(classes.root, className),\n    elevation: 0\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RouterLink, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 34\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Hidden, {\n    mdDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: notifications.length,\n    color: \"primary\",\n    variant: \"dot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    onClick: () => setDialogOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    lgUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    onClick: onMobileNavOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: true,\n    open: dialogOpen,\n    onClose: () => setDialogOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Are you sure?\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Are you want to quit?\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setDialogOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      setDialogOpen(false);\n      onLogout();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Yes\")))));\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\nexport default TopBar;","map":{"version":3,"sources":["C:/Repository/wordmeister/wm-ui/src/layouts/DashboardLayout/TopBar.js"],"names":["logo","React","useState","Link","RouterLink","clsx","PropTypes","AppBar","Badge","Box","Hidden","IconButton","Toolbar","makeStyles","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","MenuIcon","NotificationsIcon","InputIcon","AuthContext","useStyles","root","avatar","width","height","TopBar","className","onMobileNavOpen","rest","classes","notifications","dialogOpen","setDialogOpen","authorize","onLogin","onLogout","length","propTypes","string","func"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,qBAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,UAPF,EAQEC,MARF,EASEC,aATF,EAUEC,aAVF,EAWEC,iBAXF,EAYEC,WAZF,EAaEC,MAbF,QAcO,mBAdP;AAeA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,MAAMC,SAAS,GAAGX,UAAU,CAAC,OAAO;AAClCY,EAAAA,IAAI,EAAE,EAD4B;AAElCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE;AAFF;AAF0B,CAAP,CAAD,CAA5B;;AAQA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,SADc;AAEdC,EAAAA,eAFc;AAGd,KAAGC;AAHW,CAAD,KAIT;AACJ,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,aAAD,IAAkBhC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiC,UAAD,EAAaC,aAAb,IAA8BlC,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,CAAC;AAAEmC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,GAAD,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAElC,IAAI,CAAC4B,OAAO,CAACR,IAAT,EAAeK,SAAf,CADjB;AAEE,IAAA,SAAS,EAAE;AAFb,KAGME,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmB;AAAK,IAAA,GAAG,EAAEhC,IAAV;AAAgB,IAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,CADF,eAEE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,YAAY,EAAEkC,aAAa,CAACM,MAD9B;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAC,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,eAUE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAE,MAAMJ,aAAa,CAAC,IAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CAHF,eAiBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEL,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAjBF,CALF,eA+BE,oBAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,IAAI,EAAEI,UAAxB;AAAoC,IAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,KAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAFF,eAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAK;AACpCA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAG,MAAAA,QAAQ;AACT,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CALF,CA/BF,CAHN,CADF;AAyDD,CAlED;;AAoEAV,MAAM,CAACY,SAAP,GAAmB;AACjBX,EAAAA,SAAS,EAAExB,SAAS,CAACoC,MADJ;AAEjBX,EAAAA,eAAe,EAAEzB,SAAS,CAACqC;AAFV,CAAnB;AAKA,eAAed,MAAf","sourcesContent":["import logo from 'src/components/Logo';\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport { AuthContext } from '../../contexts/authContext';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  return (\n    <AuthContext.Consumer>\n      {\n        ({ authorize, onLogin, onLogout }) => (\n          <AppBar\n            className={clsx(classes.root, className)}\n            elevation={0}\n            {...rest}\n          >\n            <Toolbar>\n              <RouterLink to=\"/\"><img src={logo} alt=\"logo\" /></RouterLink>\n              <Box flexGrow={1} />\n              <Hidden mdDown>\n                <IconButton color=\"inherit\">\n                  <Badge\n                    badgeContent={notifications.length}\n                    color=\"primary\"\n                    variant=\"dot\"\n                  >\n                    <NotificationsIcon />\n                  </Badge>\n                </IconButton>\n                <IconButton color=\"inherit\" onClick={() => setDialogOpen(true)}>\n                  <InputIcon />\n                </IconButton>\n              </Hidden>\n              <Hidden lgUp>\n                <IconButton\n                  color=\"inherit\"\n                  onClick={onMobileNavOpen}\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Hidden>\n            </Toolbar>\n            <Dialog fullWidth open={dialogOpen} onClose={() => setDialogOpen(false)}>\n              <DialogTitle>Are you sure?</DialogTitle>\n              <DialogContent>\n                <DialogContentText>Are you want to quit?</DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => setDialogOpen(false)}>\n                  Cancel\n            </Button>\n                <Button color=\"primary\" onClick={() =>{\n                  setDialogOpen(false);\n                  onLogout();\n                }}>\n                  Yes\n            </Button>\n              </DialogActions>\n            </Dialog>\n          </AppBar>\n        )\n      }\n    </AuthContext.Consumer>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;"]},"metadata":{},"sourceType":"module"}