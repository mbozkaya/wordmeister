{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repository\\\\wordmeister\\\\wm-ui\\\\src\\\\contexts\\\\authContext.js\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Navigate } from 'react-router-dom';\nimport accountService from '../services/accountService'; // import Login from '../pages/Login';\n// eslint-disable-next-line linebreak-style\n\nconst AuthContext = React.createContext();\n\nconst AuthProvider = props => {\n  const [contextState, setContextState] = useState({\n    authorize: false,\n    checkAuth: false,\n    permission: 0,\n    loginError: false,\n    loginErrorMessage: '',\n    signupError: false,\n    signupErrorMessage: ''\n  });\n  const {\n    children\n  } = props;\n\n  const onLogin = model => {\n    accountService.login(model).then(response => {\n      if (response && response.error === false) {\n        const {\n          data\n        } = response;\n        setContextState({\n          authorize: true,\n          loginError: false,\n          loginErrorMessage: '',\n          checkAuth: true\n        });\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('ug', data.guid);\n        localStorage.setItem('user', JSON.stringify(data));\n      } else {\n        setContextState({ ...contextState,\n          loginError: true,\n          loginErrorMessage: response.message\n        });\n      }\n    });\n  };\n\n  const onLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('ug');\n    localStorage.removeItem('user');\n    setContextState({\n      authorize: false,\n      permission: 0,\n      checkAuth: true\n    });\n  };\n\n  const onSignup = model => {\n    if (model === null) {\n      return;\n    }\n\n    accountService.signup(model).then(response => {\n      if (response && response.error === false) {\n        // signup basarili ise authorize'de olacak\n        setContextState({\n          // ...this.state,\n          // authorize:true,\n          // email:model.email\n          signupError: false\n        });\n        onLogin(model);\n      } else {\n        setContextState({\n          // ...this.state,\n          signupError: true,\n          signupErrorMessage: response.errorMessage\n        });\n      }\n    });\n  };\n\n  useLayoutEffect(() => {\n    accountService.authenticated().then(response => {\n      setContextState({ ...contextState,\n        authorize: response,\n        checkAuth: true,\n        permission: 0\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      authorize: contextState.authorize,\n      checkAuth: contextState.checkAuth,\n      loginError: contextState.loginError,\n      loginErrorMessage: contextState.loginErrorMessage,\n      onLogin,\n      onLogout,\n      onSignup\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst AuthRoute = ({\n  Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 3\n  }\n}, ({\n  authorize,\n  checkAuth\n}) => {\n  let content = '';\n\n  if (authorize) {\n    content = /*#__PURE__*/React.createElement(Route, Object.assign({\n      render: props => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }))\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }));\n  } else if (checkAuth && !authorize) {\n    content = /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    });\n  }\n\n  return content;\n});\n\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nAuthRoute.propTypes = {\n  Component: PropTypes.instanceOf( /*#__PURE__*/React.createElement(React.Fragment, null)).isRequired\n};\nexport { AuthContext, AuthProvider, AuthRoute };","map":{"version":3,"sources":["C:/Repository/wordmeister/wm-ui/src/contexts/authContext.js"],"names":["React","useLayoutEffect","useState","PropTypes","Route","Navigate","accountService","AuthContext","createContext","AuthProvider","props","contextState","setContextState","authorize","checkAuth","permission","loginError","loginErrorMessage","signupError","signupErrorMessage","children","onLogin","model","login","then","response","error","data","localStorage","setItem","token","guid","JSON","stringify","message","onLogout","removeItem","onSignup","signup","errorMessage","authenticated","AuthRoute","Component","rest","content","propTypes","node","isRequired","instanceOf"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Route, Navigate\n} from 'react-router-dom';\nimport accountService from '../services/accountService';\n// import Login from '../pages/Login';\n// eslint-disable-next-line linebreak-style\n\nconst AuthContext = React.createContext();\n\nconst AuthProvider = (props) => {\n  const [contextState, setContextState] = useState({\n    authorize: false,\n    checkAuth: false,\n    permission: 0,\n    loginError: false,\n    loginErrorMessage: '',\n    signupError: false,\n    signupErrorMessage: ''\n  });\n  const { children } = props;\n\n  const onLogin = (model) => {\n    accountService.login(model).then((response) => {\n      if (response && response.error === false) {\n        const { data } = response;\n        setContextState({\n          authorize: true,\n          loginError: false,\n          loginErrorMessage: '',\n          checkAuth: true,\n        });\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('ug', data.guid);\n        localStorage.setItem('user', JSON.stringify(data));\n      } else {\n        setContextState({\n          ...contextState,\n          loginError: true,\n          loginErrorMessage: response.message,\n        });\n      }\n    });\n  };\n\n  const onLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('ug');\n    localStorage.removeItem('user');\n\n    setContextState({\n      authorize: false,\n      permission: 0,\n      checkAuth: true,\n    });\n  };\n\n  const onSignup = (model) => {\n    if (model === null) { return; }\n\n    accountService.signup(model).then((response) => {\n      if (response && response.error === false) {\n        // signup basarili ise authorize'de olacak\n        setContextState({\n          // ...this.state,\n          // authorize:true,\n          // email:model.email\n          signupError: false,\n        });\n        onLogin(model);\n      } else {\n        setContextState({\n          // ...this.state,\n          signupError: true,\n          signupErrorMessage: response.errorMessage\n        });\n      }\n    });\n  };\n\n  useLayoutEffect(() => {\n    accountService.authenticated().then((response) => {\n      setContextState({\n        ...contextState,\n        authorize: response,\n        checkAuth: true,\n        permission: 0,\n      });\n    });\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        authorize: contextState.authorize,\n        checkAuth: contextState.checkAuth,\n        loginError: contextState.loginError,\n        loginErrorMessage: contextState.loginErrorMessage,\n        onLogin,\n        onLogout,\n        onSignup,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nconst AuthRoute = ({ Component, ...rest }) => (\n  <AuthContext.Consumer>\n    {({ authorize, checkAuth }) => {\n      let content = '';\n      if (authorize) {\n        content = (\n          <Route\n            render={(props) => (\n              <Component {...props} />\n            )}\n            {...rest}\n          />\n        );\n      } else if (checkAuth && !authorize) {\n        content = <Navigate to=\"/\" />;\n      }\n      return content;\n    }}\n  </AuthContext.Consumer>\n);\n\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nAuthRoute.propTypes = {\n  Component: PropTypes.instanceOf(<></>).isRequired,\n};\n\nexport {\n  AuthContext, AuthProvider, AuthRoute,\n};\n"]},"metadata":{},"sourceType":"module"}